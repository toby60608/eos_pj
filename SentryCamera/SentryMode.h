#ifndef __SENTRY_MODE_H__
#define __SENTRY_MODE_H__
// SentryMode.h
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/sem.h>
#include <sys/msg.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <string.h>
#include <stdbool.h>
#include <unistd.h>
#include <signal.h>
#include <pthread.h>
#include <fcntl.h>

#define DEFAULT_SHARED_MEMORY_KEY_NUMBER (55688)
#define DEFAULT_MESSAGE_QUEUE_KEY_NUMBER (54088)

#define SEM_MODE (0666) /* rw(owner)-rw(group)-rw(other) permission */ 
#define MSQ_MODE (0777)

#define SENTRY_MODE_COMMAND_MESSAGE_TYPE (59)

#define SHARED_MEMORY_ALARM_VIDEO_BUFFER_SIZE (448)

typedef enum _ENUM_SEMAPHORE_ID_T
{
	ENUM_SEMAPHORE_ID_SUSPEND_SIGNAL_FLAG = 0,
	ENUM_SEMAPHORE_ID_ALARM_SIGNAL_FLAG,
	ENUM_SEMAPHORE_ID_CAMERA,
	ENUM_SEMAPHORE_ID_COMPARE_PICTURE,
	ENUM_SEMAPHORE_ID_TOTAL,
}ENUM_SEMAPHORE_ID_T;

typedef enum _ENUM_SENTRY_MODE_COMMAND_ID_T
{
	ENUM_SENTRY_MODE_COMMAND_ID_RESERVED = 0,
	ENUM_SENTRY_MODE_COMMAND_ID_LOOPBACK,
	ENUM_SENTRY_MODE_COMMAND_ID_CHECK_IS_SENTRY_MODE_ACTIVE,
	ENUM_SENTRY_MODE_COMMAND_ID_SUSPEND_SENTRY_MODE,
	ENUM_SENTRY_MODE_COMMAND_ID_ACTIVE_SENTRY_MODE,
	ENUM_SENTRY_MODE_COMMAND_ID_CHECK_IS_SENTRY_MODE_ALARM,
	ENUM_SENTRY_MODE_COMMAND_ID_CLOSE_ALARM,
	ENUM_SENTRY_MODE_COMMAND_ID_TRIGGER_ALARM,
	ENUM_SENTRY_MODE_COMMAND_ID_TAKE_PICTURES,
	ENUM_SENTRY_MODE_COMMAND_ID_TAKE_4S_VIDEO,
	ENUM_SENTRY_MODE_COMMAND_ID_TAKE_6S_VIDEO,
	
	ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE = 0x80,
	ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE_LOOPBACK = ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE | ENUM_SENTRY_MODE_COMMAND_ID_LOOPBACK,
	ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE_CHECK_IS_SENTRY_MODE_ACTIVE = ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE | ENUM_SENTRY_MODE_COMMAND_ID_CHECK_IS_SENTRY_MODE_ACTIVE,
	ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE_SUSPEND_SENTRY_MODE = ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE | ENUM_SENTRY_MODE_COMMAND_ID_SUSPEND_SENTRY_MODE,
	ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE_ACTIVE_SENTRY_MODE = ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE | ENUM_SENTRY_MODE_COMMAND_ID_ACTIVE_SENTRY_MODE,
	ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE_CHECK_IS_SENTRY_MODE_ALARM = ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE | ENUM_SENTRY_MODE_COMMAND_ID_CHECK_IS_SENTRY_MODE_ALARM,
	ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE_CLOSE_ALARM = ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE | ENUM_SENTRY_MODE_COMMAND_ID_CLOSE_ALARM,
	ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE_TRIGGER_ALARM = ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE | ENUM_SENTRY_MODE_COMMAND_ID_TRIGGER_ALARM,
	ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE_TAKE_PICTURES = ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE | ENUM_SENTRY_MODE_COMMAND_ID_TAKE_PICTURES,
	ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE_TAKE_4S_VIDEO = ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE | ENUM_SENTRY_MODE_COMMAND_ID_TAKE_4S_VIDEO,
	ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE_TAKE_6S_VIDEO = ENUM_SENTRY_MODE_COMMAND_ID_RESPONSE | ENUM_SENTRY_MODE_COMMAND_ID_TAKE_6S_VIDEO,
}ENUM_SENTRY_MODE_COMMAND_ID_T;

typedef struct _STRUCT_COMMAND_PACKET_T
{
	union
	{
		struct
		{
			long MessageType;
			uint8_t Id;
			uint8_t Length;
			uint8_t Payload[256];
		};
		uint8_t RawData[262];
	};
}STRUCT_COMMAND_PACKET_T;
	
typedef struct _STRCUT_SENTRY_MODE_SHARED_MEMORY_T
{
	char Name[64];
	char AlarmVideo[SHARED_MEMORY_ALARM_VIDEO_BUFFER_SIZE];
	pid_t SentryModePid;
	key_t SharedMemoryKey;
	key_t SemaphoreKey;
	key_t MessageQueueKey;
}STRCUT_SENTRY_MODE_SHARED_MEMORY_T;

#endif
